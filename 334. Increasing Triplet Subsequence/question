Given an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.

Formally the function should:

Return true if there exists i, j, k
such that arr[i] < arr[j] < arr[k] given 0 ≤ i < j < k ≤ n-1 else return false.
Note: Your algorithm should run in O(n) time complexity and O(1) space complexity.

Example 1:

Input: [1,2,3,4,5]
Output: true
Example 2:

Input: [5,4,3,2,1]
Output: false


给定未排序的数组返回是否在数组中存在增加的长度为3的子序列。

正式的功能应该：

如果存在i，j，k则返回true
这样arr [i] <arr [j] <arr [k]给定0≤i<j <k≤n-1否则返回false。
注意：您的算法应该以O（n）时间复杂度和O（1）空间复杂度运行。