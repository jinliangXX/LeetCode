Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.

Given linked list -- head = [4,5,1,9], which looks like following:





Example 1:

Input: head = [4,5,1,9], node = 5
Output: [4,1,9]
Explanation: You are given the second node with value 5, the linked list should become 4 -> 1 -> 9 after calling your function.
Example 2:

Input: head = [4,5,1,9], node = 1
Output: [4,5,9]
Explanation: You are given the third node with value 1, the linked list should become 4 -> 5 -> 9 after calling your function.


Note:

The linked list will have at least two elements.
All of the nodes' values will be unique.
The given node will not be the tail and it will always be a valid node of the linked list.
Do not return anything from your function.


编写一个函数来删除单链表中的一个节点(尾巴除外)，该函数只允许访问该节点。

给定链表——head =[4,5,1,9]，如下:


注意:

链表将至少包含两个元素。
所有节点的值都是惟一的。
给定的节点将不是尾部，它将始终是链表的有效节点。
不要从函数返回任何东西。